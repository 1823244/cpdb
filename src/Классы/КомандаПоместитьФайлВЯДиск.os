
///////////////////////////////////////////////////////////////////////////////////////////////////
// Прикладной интерфейс

Перем Лог;

Процедура ЗарегистрироватьКоманду(Знач ИмяКоманды, Знач Парсер) Экспорт
	
	ОписаниеКоманды = Парсер.ОписаниеКоманды(ИмяКоманды, "Отправить файл на Yandex-Диск");

	Парсер.ДобавитьПозиционныйПараметрКоманды(ОписаниеКоманды, "ПутьКФайлу", "Путь к файлу для помещения в хранилище");

	Парсер.ДобавитьИменованныйПараметрКоманды(ОписаниеКоманды, 
		"-ya-token",
		"Token авторизации");

	Парсер.ДобавитьИменованныйПараметрКоманды(ОписаниеКоманды, 
		"-ya-path",
		"Путь к файлу на Yandex-Диск");

	Парсер.ДобавитьПараметрФлагКоманды(ОписаниеКоманды, 
		"-delsource",
		"Удалить исходный файл после отправки");

	Парсер.ДобавитьКоманду(ОписаниеКоманды);
	
КонецПроцедуры

Функция ВыполнитьКоманду(Знач ПараметрыКоманды) Экспорт
    
	ПутьКФайлу				= ПараметрыКоманды["ПутьКФайлу"];
	OAuth_Токен				= ПараметрыКоманды["-ya-token"];
	OAuth_Токен = "AQAEA7qiBYrCAARaItnjg7giAkzsrcVEzLF55OM";
	ЦелевойПуть				= ПараметрыКоманды["-ya-path"];
	УдалитьИсточник			= ПараметрыКоманды["-delsource"];

	ВозможныйРезультат = МенеджерКомандПриложения.РезультатыКоманд();

	Если ПустаяСтрока(ПутьКФайлу) Тогда
		Лог.Ошибка("Не указана путь к файлу для помещения на Yandex-Диск");
		Возврат ВозможныйРезультат.НеверныеПараметры;
	КонецЕсли;

	Если ПустаяСтрока(OAuth_Токен) Тогда
		Лог.Ошибка("Не задан Token авторизации");
		Возврат ВозможныйРезультат.НеверныеПараметры;
	КонецЕсли;

	Если ПустаяСтрока(ЦелевойПуть) Тогда
		Лог.Ошибка("Не задан путь к целевому файлу на Yandex-Диск");
		Возврат ВозможныйРезультат.НеверныеПараметры;
	КонецЕсли;

	Попытка
		ЯндексДиск = Новый ЯндексДиск;
		ЯндексДиск.УстановитьТокенАвторизации(OAuth_Токен);

		ЯндексДиск.ЗагрузитьНаДиск(ПутьКФайлу, ЦелевойПуть);

		СвойстваФайла = ЯндексДиск.ПолучитьСвойстваРесурса(ЦелевойПуть);

		Лог.Информация(СтрШаблон("Файл загружен %1", СвойстваФайла.name));

		СвойстваДиска = ЯндексДиск.ПолучитьСвойстваДиска();
		Лог.Информация(СтрШаблон("Всего доступно %1 байт", СвойстваДиска.total_space));
		Лог.Информация(СтрШаблон("Из них занято %1 байт", СвойстваДиска.used_space));

		Если УдалитьИсточник Тогда
			УдалитьФайлы(ПутьКФайлу);
			Лог.Информация(СтрШаблон("Исходный файл %1 удален", ПутьКФайлу));
		КонецЕсли;
		
		Возврат ВозможныйРезультат.Успех;
	Исключение
		Лог.Ошибка(ОписаниеОшибки());
		Возврат ВозможныйРезультат.ОшибкаВремениВыполнения;
	КонецПопытки;

КонецФункции

Лог = Логирование.ПолучитьЛог("ktb.app.copydb");