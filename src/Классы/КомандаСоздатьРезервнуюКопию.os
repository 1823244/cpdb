
///////////////////////////////////////////////////////////////////////////////////////////////////
// Прикладной интерфейс

Перем Лог;

Процедура ЗарегистрироватьКоманду(Знач ИмяКоманды, Знач Парсер) Экспорт
	
	ОписаниеКоманды = Парсер.ОписаниеКоманды(ИмяКоманды, "Создать резервную копию базы MS SQL");

	Парсер.ДобавитьПозиционныйПараметрКоманды(ОписаниеКоманды, "Сервер", "Адрес сервера MS SQL");
	Парсер.ДобавитьПозиционныйПараметрКоманды(ОписаниеКоманды, "База", "Имя базы для резервного копирования");

	Парсер.ДобавитьИменованныйПараметрКоманды(ОписаниеКоманды, 
		"-user",
		"Пользователь сервера");
	Парсер.ДобавитьИменованныйПараметрКоманды(ОписаниеКоманды, 
		"-pwd",
		"Пароль пользователя сервера");

	Парсер.ДобавитьИменованныйПараметрКоманды(ОписаниеКоманды, 
		"-path",
		"Путь к резервной копии");

    Парсер.ДобавитьКоманду(ОписаниеКоманды);

КонецПроцедуры

Функция ВыполнитьКоманду(Знач ПараметрыКоманды) Экспорт
    
	Сервер				= ПараметрыКоманды["Сервер"];
	База				= ПараметрыКоманды["База"];
	Пользователь		= ПараметрыКоманды["-user"];
	ПарольПользователя	= ПараметрыКоманды["-pwd"];
	ПутьКРезервнойКопии	= ПараметрыКоманды["-path"];

	ВозможныйРезультат = МенеджерКомандПриложения.РезультатыКоманд();

	Если ПустаяСтрока(Сервер) Тогда
		Лог.Ошибка("Не указан сервер MS SQL");
		Возврат ВозможныйРезультат.НеверныеПараметры;
	КонецЕсли;

	Если ПустаяСтрока(База) Тогда
		Лог.Ошибка("Не указана база для резервного копирования");
		Возврат ВозможныйРезультат.НеверныеПараметры;
	КонецЕсли;

	Если ПустаяСтрока(ПутьКРезервнойКопии) Тогда
		Лог.Ошибка("Не задан путь к резервной копии");
		Возврат ВозможныйРезультат.НеверныеПараметры;
	КонецЕсли;

	Инструменты = Новый ИнструментыСУБД;

	Инструменты.Инициализировать(Сервер, Пользователь, ПарольПользователя);
	
	ОписаниеРезультата = "";
	
	Попытка
		Инструменты.Инициализировать(Сервер, Пользователь, ПарольПользователя);
	
		Результат = Инструменты.СоздатьРезервнуюКопию(База, ПутьКРезервнойКопии, ОписаниеРезультата);

		Если Не ПустаяСтрока(ОписаниеРезультата) Тогда
			Лог.Информация(ОписаниеРезультата);
		КонецЕсли;
		
		Если Результат = 0 Тогда
			Возврат ВозможныйРезультат.ОшибкаВремениВыполнения;
		КонецЕсли;

		Возврат ВозможныйРезультат.Успех;
	Исключение
		Лог.Ошибка(ОписаниеРезультата);
		Возврат ВозможныйРезультат.ОшибкаВремениВыполнения;
	КонецПопытки;

КонецФункции

Лог = Логирование.ПолучитьЛог("ktb.app.copydb");